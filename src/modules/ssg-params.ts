export type SsgParams = {
  scrollDuration?: number;
  alwaysFullscreen?: boolean;
  neverFullscreen?: boolean;
  mobilePortraitFS?: boolean;
  forceLandscapeMode?: boolean;
  theme?: string;
  crossCursor?: boolean;
  fileToLoad?: string;
  socialShare?: boolean;
  hideImgCaptions?: boolean;
  enlargeImg?: boolean;
  sharpenEnlargedImg?: boolean;
  captionExif?: string;
  fillExifBlanks?: string[];
  bgOpacity?: number;
  fontSize?: number;
  rightClickProtection?: boolean;
  preferedCaptionLocation?: number;
  sideCaptionforSmallerLandscapeImg?: boolean;
  globalAuthorCaption?: string;
  narrowCaptionsAlignThreshold?: number;
  wideCaptionsAlignThreshold?: number;
  showFirst3ImgsTogether?: boolean;
  scaleLock1?: boolean;
  logIntoGA?: boolean;
  observeDOM?: boolean;
  imgBorderWidthX?: number;
  imgBorderWidthY?: number;
  imgBorderColor?: string;
  imgOutlineColor?: string;
  imgBorderLightFx?: boolean;
  imgBorderRadius?: number;
  imgBorderShadow?: boolean;
  watermarkWidth?: number;
  watermarkImage?: string;
  watermarkText?: string;
  watermarkFontColor?: string;
  watermarkFontSize?: number;
  watermarkOffsetX?: number;
  watermarkOffsetY?: number;
  watermarkOpacity?: number;
  hint1?: string;
  hint2?: string;
  hint3?: string;
  hintTouch?: string;
  hintFS?: string;
  toTheTop?: string;
  exitLink?: string;
  imageLink?: string;
  copyButton?: string;
  linkPaste?: string;
  showLandscapeHint?: boolean;
  landscapeHint?: string;
  onGalleryStart?: (data: any) => void;
  onImgScrollsIn?: (data: any) => void;
  onImgView?: (data: any) => void;
  onImgLoad?: (data: any) => void;
  onOrientationChange?: (data: any) => void;
  onBeyondGallery?: (data: any) => void;
  onGalleryExit?: (data: any) => void;
};
